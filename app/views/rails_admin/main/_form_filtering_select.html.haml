:ruby
  config = field.associated_model_config
  related_id = params[:associations] && params[:associations][field.name.to_s]

  if @object.new_record? && related_id.present? && related_id != 'new'
    selected = config.abstract_model.get(related_id)
    selected_id = selected.id
    selected_name = selected.send(config.object_label_method)
  else
    selected_id = field.selected_id
    selected_name = field.formatted_value
  end
  
  current_action = params[:action].in?(['create', 'new']) ? 'create' : 'update'
  
  edit_url = authorized?(:edit, config.abstract_model) ? edit_path(:model_name => config.abstract_model.to_param, :id => '__ID__') : ''
  
  xhr = !field.associated_collection_cache_all
  
  collection = xhr ? [[selected_name, selected_id]] : controller.list_entries(config, :index, field.associated_collection_scope, false).map { |o| [o.send(config.object_label_method), o.id] }

= form.select field.method_name, collection, { :selected => selected_id, :include_blank => true }, field.html_attributes.reverse_merge({:placeholder => t('admin.index.search')})

- if authorized? :new, config.abstract_model
  - path_hash = { :model_name => config.abstract_model.to_param }
  - path_hash.merge!({ :associations => { field.inverse_of => (@object.id || 'new') } }) if field.inverse_of
  = link_to t('admin.actions.create').capitalize + ' ' + config.abstract_model.pretty_name.downcase, '#', :data => { :link => new_path(path_hash) }, :class => "btn create", :style => 'float:left; margin-left:10px'

- if edit_url.present?
  = link_to t('admin.actions.update').capitalize + ' ' + config.abstract_model.pretty_name.downcase, '#', :data => { :link => edit_url }, :class => "btn update #{field.value.nil? && 'disabled'}", :style => 'float:left; margin-left:10px'

= javascript_tag do
  :plain
    jQuery(function($) {
      $("##{field.dom_id}").filteringSelect({
        xhr: #{xhr},
        createQuery: function(query) {
          return { query: query }
        },
        remote_source: "#{index_path(field.associated_model_config.abstract_model.to_param, :source_object_id => @object.id, :source_abstract_model => @abstract_model.to_param, :associated_collection => field.name, :current_action => current_action, :compact => true).html_safe}"
      });
      if($("#modal").length)Â { // hide link if we already are inside a dialog (endless issues on nested dialogs with JS)
        $("##{field.dom_id}_field .btn").hide();
      } else {
        $("##{field.dom_id}_field").remoteForm();
      }
    });
